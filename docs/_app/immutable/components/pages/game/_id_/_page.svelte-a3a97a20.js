import{S as l,i as f,d as u,s as g,A as w,B as p,C as _,k as h,t as b,D as P,v}from"../../../../chunks/singletons-f35c50ab.js";import{O as m}from"../../../../chunks/OnboardingFlow-54f0b749.js";function d(n){let t,o;t=new m({props:{gameId:n[0]},$$inline:!0});const s={c:function(){w(t.$$.fragment)},l:function(e){p(t.$$.fragment,e)},m:function(e,i){_(t,e,i),o=!0},p:function(e,[i]){const r={};i&1&&(r.gameId=e[0]),t.$set(r)},i:function(e){o||(h(t.$$.fragment,e),o=!0)},o:function(e){b(t.$$.fragment,e),o=!1},d:function(e){P(t,e)}};return u("SvelteRegisterBlock",{block:s,id:d.name,type:"component",source:"",ctx:n}),s}function j(n,t,o){let{$$slots:s={},$$scope:c}=t;v("Page",s,[]);let{data:e}=t,{gameId:i}=e;n.$$.on_mount.push(function(){e===void 0&&!("data"in t||n.$$.bound[n.$$.props.data])&&console.warn("<Page> was created without expected prop 'data'")});const r=["data"];return Object.keys(t).forEach(a=>{!~r.indexOf(a)&&a.slice(0,2)!=="$$"&&a!=="slot"&&console.warn(`<Page> was created with unknown prop '${a}'`)}),n.$$set=a=>{"data"in a&&o(1,e=a.data)},n.$capture_state=()=>({OnboardingFlow:m,data:e,gameId:i}),n.$inject_state=a=>{"data"in a&&o(1,e=a.data),"gameId"in a&&o(0,i=a.gameId)},t&&"$$inject"in t&&n.$inject_state(t.$$inject),n.$$.update=()=>{n.$$.dirty&2&&o(0,{gameId:i}=e,i)},[i,e]}class O extends l{constructor(t){super(t),f(this,t,j,d,g,{data:1}),u("SvelteRegisterComponent",{component:this,tagName:"Page",options:t,id:d.name})}get data(){throw new Error("<Page>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set data(t){throw new Error("<Page>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}export{O as default};
