import{s as f}from"../chunks/scheduler.DuvC89Cg.js";import{S as g,i as l,d as m,v as p,c as w,a as _,m as h,t as b,b as P,e as v}from"../chunks/index.Cr2bqvGs.js";import{O as u}from"../chunks/OnboardingFlow.B1krwDsD.js";function d(n){let t,o;t=new u({props:{gameId:n[0]},$$inline:!0});const r={c:function(){w(t.$$.fragment)},l:function(e){_(t.$$.fragment,e)},m:function(e,c){h(t,e,c),o=!0},p:function(e,[c]){const s={};c&1&&(s.gameId=e[0]),t.$set(s)},i:function(e){o||(b(t.$$.fragment,e),o=!0)},o:function(e){P(t.$$.fragment,e),o=!1},d:function(e){v(t,e)}};return m("SvelteRegisterBlock",{block:r,id:d.name,type:"component",source:"",ctx:n}),r}function j(n,t,o){let{$$slots:r={},$$scope:i}=t;p("Page",r,[]);let{data:e}=t,{gameId:c}=e;n.$$.on_mount.push(function(){e===void 0&&!("data"in t||n.$$.bound[n.$$.props.data])&&console.warn("<Page> was created without expected prop 'data'")});const s=["data"];return Object.keys(t).forEach(a=>{!~s.indexOf(a)&&a.slice(0,2)!=="$$"&&a!=="slot"&&console.warn(`<Page> was created with unknown prop '${a}'`)}),n.$$set=a=>{"data"in a&&o(1,e=a.data)},n.$capture_state=()=>({OnboardingFlow:u,data:e,gameId:c}),n.$inject_state=a=>{"data"in a&&o(1,e=a.data),"gameId"in a&&o(0,c=a.gameId)},t&&"$$inject"in t&&n.$inject_state(t.$$inject),n.$$.update=()=>{n.$$.dirty&2&&o(0,{gameId:c}=e,c)},[c,e]}class S extends g{constructor(t){super(t),l(this,t,j,d,f,{data:1}),m("SvelteRegisterComponent",{component:this,tagName:"Page",options:t,id:d.name})}get data(){throw new Error("<Page>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set data(t){throw new Error("<Page>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}export{S as component};
